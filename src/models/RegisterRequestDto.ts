/* tslint:disable */
/* eslint-disable */
/**
 * Stable - Auth Service
 * An authentication service API for Stable
 *
 * The version of the OpenAPI document: 0.0.7
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface RegisterRequestDto
 */
export interface RegisterRequestDto {
    /**
     * The email of the user
     * @type {string}
     * @memberof RegisterRequestDto
     */
    email: string;
    /**
     * The password of the user
     * @type {string}
     * @memberof RegisterRequestDto
     */
    password: string;
    /**
     * The given name of the user
     * @type {string}
     * @memberof RegisterRequestDto
     */
    givenName: string;
    /**
     * The family name of the user
     * @type {string}
     * @memberof RegisterRequestDto
     */
    familyName: string;
    /**
     * Gender query parameter
     * @type {string}
     * @memberof RegisterRequestDto
     */
    gender?: RegisterRequestDtoGenderEnum;
    /**
     * Acceptance of Terms and Privacy Policy
     * @type {boolean}
     * @memberof RegisterRequestDto
     */
    acceptTerms: boolean;
}


/**
 * @export
 */
export const RegisterRequestDtoGenderEnum = {
    Male: 'male',
    Female: 'female'
} as const;
export type RegisterRequestDtoGenderEnum = typeof RegisterRequestDtoGenderEnum[keyof typeof RegisterRequestDtoGenderEnum];


/**
 * Check if a given object implements the RegisterRequestDto interface.
 */
export function instanceOfRegisterRequestDto(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "email" in value;
    isInstance = isInstance && "password" in value;
    isInstance = isInstance && "givenName" in value;
    isInstance = isInstance && "familyName" in value;
    isInstance = isInstance && "acceptTerms" in value;

    return isInstance;
}

export function RegisterRequestDtoFromJSON(json: any): RegisterRequestDto {
    return RegisterRequestDtoFromJSONTyped(json, false);
}

export function RegisterRequestDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): RegisterRequestDto {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'email': json['email'],
        'password': json['password'],
        'givenName': json['givenName'],
        'familyName': json['familyName'],
        'gender': !exists(json, 'gender') ? undefined : json['gender'],
        'acceptTerms': json['acceptTerms'],
    };
}

export function RegisterRequestDtoToJSON(value?: RegisterRequestDto | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'email': value.email,
        'password': value.password,
        'givenName': value.givenName,
        'familyName': value.familyName,
        'gender': value.gender,
        'acceptTerms': value.acceptTerms,
    };
}

